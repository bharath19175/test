---
version: "2.1"
services:

  #Elasticsearch container
  elasticsearch:
    container_name: elasticsearch
    hostname: elasticsearch
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}"
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms${ES_JVM_HEAP} -Xmx${ES_JVM_HEAP}"
    mem_limit: ${ES_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data
    #Port 9200 is available on the host. Need to for user to access as well as Packetbeat
    ports: ['9200:9200']
    #Healthcheck to confirm availability of ES. Other containers wait on this.
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "-u", "elastic:${ES_PASSWORD}", "http://localhost:9200/_cat/health"]
    #Internal network for the containers
    networks: ['stack']

  #Kibana container
  kibana:
    container_name: kibana
    hostname: kibana
    image: "docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}"
    volumes:
      - ./config/kibana/kibana.yml:/usr/share/kibana/kibana.yml
    #Port 5601 accessible on the host
    ports: ['5601:5601']
    networks: ['stack']
    #We don't start Kibana until the ES instance is ready
    depends_on: ['elasticsearch']
    restart: on-failure
    environment:
      - "ELASTICSEARCH_PASSWORD=${ES_PASSWORD}"
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/login"]
      retries: 6

  #Filebeat container
  filebeat:
    container_name: filebeat
    hostname: filebeat
    user: root
    image: "docker.elastic.co/beats/filebeat:${ELASTIC_VERSION}"
    volumes:
      #Mount the filebeat configuration so users can make edit
      - ./config/beats/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      #Mount the prospectors directory. Users can in turn add propspectors to this directory and they will be dynamically loaded
      - ./config/beats/filebeat/prospectors.d/:/usr/share/filebeat/prospectors.d/
      #Mount the nginx logs into the filebeat container so we can access and index them using the filebeat nginx module
      - ./logs/nginx/:/var/log/nginx/
      #Mount the apache2 logs into the filebeat container so we can access and index them using the filebeat apache2 module
      - ./logs/apache2/:/var/log/apache2/
      #Mount the mysql logs into the filebeat container so we can access and and index them using the filebeat apache module
      - ./logs/mysql/:/var/log/mysql/
      #Mount the hosts system log directory. This represents the logs of the VM hosting docker. Consumed by the filebeat system module.
      - /private/var/log/:/var/log/host/:ro
      #Mount the docker logs for indexing by the custom prospector ./config/filebeat/prospectors.d
      - /var/lib/docker/containers:/hostfs/var/lib/docker/containers
      #Named volume fsdata. This is used to persist the registry file between restarts, so to avoid data duplication
      - fbdata:/usr/share/filebeat/data/
    networks: ['stack']
    command: filebeat -e -E output.elasticsearch.username=elastic -E output.elasticsearch.password=${ES_PASSWORD} -strict.perms=false
    restart: on-failure
    depends_on:
      #wait for the these services to come up. This ensures the logs are available and ES exists for indexing
      elasticsearch:  { condition: service_healthy }
      nginx: { condition: service_started }
      apache2: { condition: service_started }

  #Nginx container
  nginx:
    container_name: nginx
    hostname: nginx
    build: ${PWD}/config/nginx
    networks: ['stack']
    #Expose port 80 to allow users to hit content and generate data for filebeat and packetbeat
    ports: ['80:80']
    command: nginx -g 'daemon off;'
    volumes:
      #Logs are mounted to a relative path. These are also accessed by Filebeat and consumed by the Nginx module
      - ./logs/nginx/:/var/log/nginx/

  #Apache2 container
  apache2:
    container_name: apache2
    hostname: apache2
    build: ${PWD}/config/apache2
    networks: ['stack']
    #Expose port 80 as port 800 to allow users to hit content and generate data for filebeat and packetbeat
    ports: ['8000:80']
    volumes:
      #Logs are mounted to a relative path. These are also accessed by Filebeat and consumed by the Apache module
      - ./logs/apache2/:/var/log/apache2/

#  configure_stack:
 #   container_name: configure_stack
  #  image: docker.elastic.co/beats/metricbeat:${ELASTIC_VERSION}
   # volumes: ['./init/configure-stack.sh:/usr/local/bin/configure-stack.sh:ro','./init/pipelines/:/usr/local/bin/pipelines/','./init/templates/:/usr/local/bin/templates/']
    #command: ['/bin/bash', '-c', 'cat /usr/local/bin/configure-stack.sh | tr -d "\r" | bash']
    #networks: ['stack']
    #environment: ['ELASTIC_VERSION=${ELASTIC_VERSION}','ES_PASSWORD=${ES_PASSWORD}','DEFAULT_INDEX_PATTERN=${DEFAULT_INDEX_PATTERN}']
    #depends_on: ['elasticsearch','kibana']


volumes:
  #Mysql data
  mysqldata:
    driver: local
  #Es data
  esdata:
    driver: local
  #Filebeat data i.e. registry file
  fbdata:
    driver: local
networks: {stack: {}}
